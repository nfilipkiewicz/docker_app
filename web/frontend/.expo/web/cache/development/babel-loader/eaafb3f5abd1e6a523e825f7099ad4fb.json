{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nataliaszakiel/Desktop/Aplikacja/frontend/navigation/AuthStack.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport OnboardingScreen from \"../screens/OnboardingScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport SignupScreen from \"../screens/SignupScreen\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport View from \"react-native-web/dist/exports/View\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nvar Stack = createStackNavigator();\n\nvar AuthStack = function AuthStack() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isFirstLaunch = _React$useState2[0],\n      setIsFirstLaunch = _React$useState2[1];\n\n  var routeName;\n  useEffect(function () {\n    AsyncStorage.getItem('alreadyLaunched').then(function (value) {\n      if (value == null) {\n        AsyncStorage.setItem('alreadyLaunched', 'true');\n        setIsFirstLaunch(true);\n      } else {\n        setIsFirstLaunch(true);\n      }\n    });\n  }, []);\n\n  if (isFirstLaunch == null) {\n    return null;\n  } else if (isFirstLaunch == true) {\n    routeName = \"Onboarding\";\n  } else {\n    routeName = \"Login\";\n  }\n\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: routeName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Onboarding\",\n    component: OnboardingScreen,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Signup\",\n    component: SignupScreen,\n    options: function options(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        title: '',\n        headerStyle: {\n          backgroundColor: 'transparent',\n          shadowColor: 'transparent',\n          elevation: 0\n        },\n        headerLeft: function headerLeft() {\n          return React.createElement(View, {\n            style: {\n              marginLeft: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }\n          }, React.createElement(FontAwesome.Button, {\n            name: \"angle-left\",\n            size: 25,\n            backgroundColor: \"transparent\",\n            color: \"#333\",\n            onPress: function onPress() {\n              return navigation.navigate('Login');\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }\n          }));\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default AuthStack;","map":{"version":3,"sources":["/Users/nataliaszakiel/Desktop/Aplikacja/frontend/navigation/AuthStack.js"],"names":["React","useState","useEffect","createStackNavigator","OnboardingScreen","LoginScreen","SignupScreen","AsyncStorage","FontAwesome","Stack","AuthStack","isFirstLaunch","setIsFirstLaunch","routeName","getItem","then","value","setItem","header","navigation","title","headerStyle","backgroundColor","shadowColor","elevation","headerLeft","marginLeft","navigate"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport OnboardingScreen from '../screens/OnboardingScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport SignupScreen from '../screens/SignupScreen';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { View } from 'react-native';\n\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\n\n \nconst Stack = createStackNavigator();\n\n\nconst AuthStack = () => {\n  const [isFirstLaunch, setIsFirstLaunch] = React.useState(null);\n  let routeName;\n\n  useEffect(() => {\n    AsyncStorage.getItem('alreadyLaunched').then(value => {\n      if(value == null){\n        AsyncStorage.setItem('alreadyLaunched', 'true');\n        setIsFirstLaunch(true);\n      } else {\n        setIsFirstLaunch(true);\n      }//add some error handling, can do simply setIsFirstLaunch(null)\n    })\n  }, []);\n\n  if (isFirstLaunch == null){\n    return null;\n  } else if ( isFirstLaunch == true ) {\n    routeName = \"Onboarding\"; \n  } else {\n    routeName = \"Login\";\n  }\n\n  return (\n    <Stack.Navigator initialRouteName = {routeName}>\n      <Stack.Screen \n        name = \"Onboarding\"\n        component  = {OnboardingScreen}\n        options = {{ header: () => null }}\n        />\n         <Stack.Screen \n        name = \"Login\"\n        component  = {LoginScreen}\n        options = {{ header: () => null }}\n        />\n        <Stack.Screen \n        name = \"Signup\"\n        component  = {SignupScreen}\n        options = {({navigation})=> ({\n            title: '',\n            headerStyle:  {\n              backgroundColor: 'transparent',\n              shadowColor: 'transparent',\n              elevation: 0\n            },\n            headerLeft:() => (\n              <View style = {{marginLeft: 10}}>\n                <FontAwesome.Button\n                name = \"angle-left\"\n                size = {25}\n                backgroundColor='transparent'\n                color=\"#333\"\n                onPress = {() => navigation.navigate('Login')}\n                />\n              </View>\n            )\n\n        })}\n        />\n      \n    </Stack.Navigator>\n\n  )\n  /*const App = () => {\n    return (\n      <NavigationContainer>\n      <AppStack.Navigator headerMode=\"none\">\n       <AppStack.Screen name=\"Onboarding\" component ={OnboardingScreen} />\n       <AppStack.Screen name=\"Login\" component ={LoginScreen} />\n       </AppStack.Navigator> \n      </NavigationContainer>\n    )\n    \n  \n};*/\n};\n\nexport default AuthStack;\n"]},"metadata":{},"sourceType":"module"}